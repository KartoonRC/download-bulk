import os
import requests
# Function to generate filenames with pattern for duplicates
def unique_filename(directory, file_name_base, extension):
    # If the file does not exist, return the base file name with extension
    if not os.path.exists(os.path.join(directory, file_name_base + extension)):
        return file_name_base + extension
    # Initialize the counter and generate filenames with pattern for duplicates
    counter = 1
    new_file_name = f"{file_name_base} ({counter}){extension}"
    # Check for existing files and increment counter for duplicates
    while os.path.exists(os.path.join(directory, new_file_name)):
        counter += 1
        new_file_name = f"{file_name_base} ({counter}){extension}"
    return new_file_name
# Function to download a file from a URL
def download_file(url, directory):
    try:
        response = requests.get(url, stream=True)
        if response.status_code == 200:
            # Get the file name and extension from the URL
            full_file_name = url.split("/")[-1]
            file_name_base, extension = os.path.splitext(full_file_name)
            # Generate a unique file name with pattern for duplicates
            unique_name = unique_filename(directory, file_name_base, extension)
            file_path = os.path.join(directory, unique_name)
            # Write the response content to a file
            with open(file_path, 'wb') as file:
                for chunk in response.iter_content(1024):
                    file.write(chunk)
            print(f"Downloaded: {unique_name}")
        else:
            print(f"Failed to download {url} - Status code: {response.status_code}")
    except Exception as e:
        print(f"An error occurred while downloading {url}: {str(e)}")
# Directory to save the downloaded files
save_directory = 'downloads'
# Create the directory if it does not exist
if not os.path.exists(save_directory):
    os.makedirs(save_directory)
# Path to the text file containing URLs
urls_file_path = 'urls.txt'
# Check if the file with URLs exists
if not os.path.exists(urls_file_path):
    print(f"File not found: {urls_file_path}")
    exit()
# Read the list of URLs from the text file
with open(urls_file_path, 'r') as file:
    urls = file.read().splitlines()
# Download each file in the list
for url in urls:
    download_file(url, save_directory)
